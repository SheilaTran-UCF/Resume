{"version":3,"sources":["components/LayoutPage.js","components/LeftContent.js","reselect/resumeReselect.js","components/Loading.js","components/introduction/Introduction.js","components/RightContent.js","components/skill/Skill.js","components/experience/Expeience.js","components/education/Education.js","components/interest/Interest.js","components/contact/Contact.js","components/FooterPage.js","container/Resume.js","actions/action.js","actions/constant.js","reducer/resumeReducer.js","reducer/rootReducer.js","api/cvData.js","api/api.js","saga/resumeSaga.js","saga/rootSaga.js","store/configStore.js","App.js","serviceWorker.js","index.js"],"names":["React","memo","props","id","className","children","rootResume","state","resume","introductionReselect","createSelector","item","loading","dataResume","introduction","skillReselect","skills","educationReselect","education","experienceReselect","experience","interestReselect","interest","contactReselect","contact","LoadingData","active","useSelector","createStructuredSelector","src","avatar","alt","full_name","title","description","href","aria-hidden","Loading","map","key","skill_name","role","aria-valuenow","skill_level","aria-valuemin","aria-valuemax","style","width","index","time","level","company","address","name","school","add","phone","email","FooterPage","Resume","dispatch","useDispatch","useEffect","type","initialState","error","resumeReducer","action","data","rootReducer","combineReducers","rank","getDataResume","DataResume","response","api","getDataSaga","watchGetDataSaga","put","call","console","takeEvery","rootSaga","all","sagaMiddleware","createSagaMiddleware","store","perloadState","createStore","composeWithDevTools","applyMiddleware","run","configureStore","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.f346314d.chunk.js","sourcesContent":["import React from 'react';\nconst LayoutPage = (props) => {\n    return (\n        <>\n            <div id=\"main-wrapper\">\n                <div className=\"columns-block container\">\n                    {props.children}\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default React.memo(LayoutPage)\n","import React from 'react'\n\n\nconst LeftContent = (props) => {\n    return (\n        <>\n            <div className=\"left-col-block blocks\">\n                {props.children}\n            </div>\n        </>\n    )\n}\n\nexport default React.memo(LeftContent)\n","import { createSelector } from 'reselect';\n\n\nconst rootResume = state => state.resume;\n\nexport const loadingResume = createSelector(\n    rootResume,\n    item =>item.loading\n);\n\nexport const introductionReselect = createSelector(\n    rootResume,\n    item =>item.dataResume.introduction\n);\n\nexport const skillReselect = createSelector(\n    rootResume,\n    item =>item.dataResume.skills\n);\n\nexport const educationReselect = createSelector(\n    rootResume,\n    item =>item.dataResume.education\n);\n\nexport const experienceReselect = createSelector(\n    rootResume,\n    item =>item.dataResume.experience\n);\n\nexport const interestReselect = createSelector(\n    rootResume,\n    item => item.dataResume.interest\n);\n\nexport const contactReselect = createSelector(\n    rootResume,\n    item => item.dataResume.contact\n);","import React from 'react';\nimport { Skeleton } from 'antd';\n\nconst LoadingData = () => (\n    <>\n        <section className=\"section-wrapper\">\n            <div className=\"container-fluid\">\n                <Skeleton active />\n            </div>\n        </section>\n    </>\n);\n\nexport default LoadingData;","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport {introductionReselect} from '../../reselect/resumeReselect';\nimport LoadingPage from '../Loading';\n\nconst Introduction = () => {\n    const {introduction} = useSelector(createStructuredSelector({\n        introduction: introductionReselect\n    }))\n    return (\n        <>\n        {introduction ? (\n            <header className=\"header theiaStickySidebar\">\n                <div className=\"profile-img\">\n                    <img src={`img/${introduction.avatar}`} className=\"img-responsive\" alt=\"\"/>\n                </div>\n                <div className=\"content\">\n                    <h1>{introduction.full_name}</h1>\n                    <span className=\"lead\">{introduction.title}</span>\n\n                    <div className=\"about-text\">\n                        <p>\n                            {introduction.description}\n                        </p>\n                        <p><img src=\"img/Signature.png\" alt=\"\" className=\"img-responsive\"/></p>\n                    </div>\n\n\n                    <ul className=\"social-icon\">\n                        <li><a href=\"#\"><i className=\"fa fa-facebook\" aria-hidden=\"true\"></i></a></li>\n                        <li><a href=\"#\"><i className=\"fa fa-twitter\" aria-hidden=\"true\"></i></a></li>\n                        <li><a href=\"#\"><i className=\"fa fa-linkedin\" aria-hidden=\"true\"></i></a></li>\n                        <li><a href=\"#\"><i className=\"fa fa-slack\" aria-hidden=\"true\"></i></a></li>\n                        <li><a href=\"#\"><i className=\"fa fa-dribbble\" aria-hidden=\"true\"></i></a></li>\n                    </ul>\n                </div>\n\n            </header>) : (\n                <LoadingPage/>\n            )\n        }\n        </>\n    )\n}\n\nexport default React.memo(Introduction)\n","import React from 'react'\n\n\nconst RightContent = (props) => {\n    return (\n        <>\n            <div className=\"right-col-block blocks\">\n                {props.children}\n            </div>\n        </>\n    )\n}\n\nexport default React.memo(RightContent)\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport {skillReselect} from '../../reselect/resumeReselect';\nimport LoadingPage from '../Loading';\n\nconst Skill = () => {\n    const {skills} = useSelector(createStructuredSelector({\n        skills: skillReselect\n      }))\n    return (\n\n        <>\n        {skills ? (\n            <section className=\"section-wrapper skills-wrapper\">\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <div className=\"section-title\">\n                                <h2>Skills</h2>\n                            </div>\n                        </div>\n\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <div className=\"progress-wrapper\">\n                                {skills.map((item, key) => (\n                                    <div className=\"progress-item\">\n                                        <span className=\"progress-title\">{item.skill_name}</span>\n                                        <div className=\"progress\">\n                                            <div className=\"progress-bar\" role=\"progressbar\" aria-valuenow={`${item.skill_level}`} aria-valuemin=\"0\"\n                                                aria-valuemax=\"100\" style={{width: `${item.skill_level}%`}}><span className=\"progress-percent\"> {item.skill_level}%</span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n                    \n                </div>\n                \n            </section>) : (<LoadingPage/>)\n        }\n        </>\n    )\n}\n\nexport default React.memo(Skill)\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport {experienceReselect} from '../../reselect/resumeReselect';\nimport LoadingPage  from '../Loading';\n\nconst Expeience = () => {\n    const {experience} = useSelector(createStructuredSelector({\n        experience: experienceReselect\n    }));\n    return (\n        <>\n           {experience ? (\n            <section className=\"section-wrapper section-experience gray-bg\">\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <div className=\"section-title\"><h2>Work Experience</h2></div>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                        {experience.map((item,index) => (\n                            <div className=\"content-item\" key={index}>\n                                <small>{item.time}</small>\n                                <h3>{item.level}</h3>\n                                <h4>{item.company}</h4>\n                                <p>{item.address}</p>\n                            </div>\n                        ))}\n                        </div>\n                    </div>\n                </div>\n            </section>\n            ) : (<LoadingPage/>)}\n        </>\n    )\n}\n\nexport default React.memo(Expeience)\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport {educationReselect} from '../../reselect/resumeReselect';\nimport LoadingPage  from '../Loading';\n\nconst Education = () => {\n    const {education} = useSelector(createStructuredSelector({\n        education: educationReselect\n    }));\n    return (\n        <>\n        {education ? (\n            <section className=\"section-wrapper section-education\">\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <div className=\"section-title\"><h2>Education</h2></div>\n                        </div>\n                    </div>\n                \n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                        {education.map((item,index) => (\n                            <div className=\"content-item\">\n                                <small>{item.time}</small>\n                                <h3>{item.name}</h3>\n                                <h4>{item.school}</h4>\n                                <p>{item.add}</p>\n                            </div> \n                        ))}                        \n                        </div>\n                    </div>\n                \n                </div>\n            \n            </section>\n        ) : (<LoadingPage/>)}\n            \n        </>\n    )\n}\n\nexport default React.memo(Education)\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport {interestReselect} from '../../reselect/resumeReselect';\nimport LoadingPage  from '../Loading';\n\nconst Interest = () => {\n    const {interest} = useSelector(createStructuredSelector({\n        interest: interestReselect\n    }));\n    return (\n        <>\n        {interest ? (\n            <section className=\"section-wrapper section-interest gray-bg\">\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <div className=\"section-title\">\n                                <h2>Interest</h2>\n                            </div>\n                        </div>\n                    </div>\n                \n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                        {interest.map((item, index)=> (\n                            <div key={index} className=\"content-item\">\n                                <h3>{item.name}</h3>\n                                <p>{item.description}</p>\n                            </div>\n                        ))}\n                        </div>\n                    </div>\n                </div>\n            </section>\n        ) : (<LoadingPage/>)}\n            \n        </>\n    )\n}\n\nexport default React.memo(Interest)\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport {contactReselect} from '../../reselect/resumeReselect';\nimport LoadingPage  from '../Loading';\n\nconst Contact = () => {\n    const {contact} = useSelector(createStructuredSelector({\n        contact: contactReselect\n    }));\n    return (\n        <>\n        { contact ? (\n        <section className=\"section-contact section-wrapper gray-bg\">\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <div className=\"section-title\">\n                                <h2>Contact</h2>\n                            </div>\n                        </div>\n                    </div>\n                   \n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <address>\n                                <strong>Address</strong><br/>\n                                {contact.address}\n                            </address>\n                            <address>\n                                <strong>Phone Number</strong><br/>\n                                {contact.phone}\n                            </address>\n\n                            <address>\n                                <strong>Mobile Number</strong><br/>\n                                {contact.phone}\n                            </address>\n\n\n                            <address>\n                                <strong>Email</strong><br/>\n                                <a href={`mailto:${contact.email}`}>{contact.email}</a>\n                            </address>\n                        </div>\n                    </div>\n                   \n                \n                </div>\n               \n            </section>) : (<LoadingPage/>)}\n            \n        </>\n    )\n}\n\nexport default React.memo(Contact)\n","import React from 'react'\n\nconst FooterPage = () => {\n    return (\n        <>\n            <footer className=\"footer\">\n                <div className=\"copyright-section\">\n                    <div className=\"container-fluid\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"copytext\">&copy; Resumex. All rights reserved - 2020</div>\n                            </div>\n                        </div>\n                       \n                    </div>\n                   \n                </div>\n                \n            </footer>\n        </>\n    )\n}\n\nexport default FooterPage\n","import React, {useEffect} from 'react';\nimport { useDispatch } from 'react-redux';\nimport LayoutPage from '../components/LayoutPage';\nimport LeftContent from '../components/LeftContent';\nimport Introduction from '../components/introduction/Introduction';\nimport RightContent from '../components/RightContent';\nimport Skill from '../components/skill/Skill';\nimport Experience from '../components/experience/Expeience'\nimport Education from '../components/education/Education'\nimport Interest from '../components/interest/Interest'\nimport Contact from '../components/contact/Contact';\nimport FooterPage from '../components/FooterPage';\n\nimport {getDataResume} from '../actions/action';\n\nconst Resume = () => {\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(getDataResume());\n    }, [])\n\n  return (\n    <>\n      <LayoutPage>\n        <LeftContent>\n          <Introduction/>\n        </LeftContent>\n        <RightContent>\n          <Skill/>\n          <Experience/>\n          <Education/>\n          <Interest />\n          <Contact />\n          <FooterPage />\n        </RightContent>\n      </LayoutPage>\n    </>\n  );\n}\n\nexport default Resume;","import {\n    LOADING_GET_DATA,\n    GET_DATA,\n    GET_DATA_SUCESS,\n    GET_DATA_FAIL\n} from './constant';\n\nexport const loadingGetData = (loading) =>  ({\n    type: LOADING_GET_DATA,\n    loading,\n})\n\nexport const getDataResume = () =>  ({\n    type: GET_DATA,\n})\n\nexport const getDataResumeSuccess = (data) => ({\n    type: GET_DATA_SUCESS,\n    data,\n})\n\nexport const getDataResumeFail = (error) => ({\n    type: GET_DATA_FAIL,\n    error,\n})","export const LOADING_GET_DATA = 'LOADING_GET_DATA';\nexport const GET_DATA = 'GET_DATA';\nexport const GET_DATA_SUCESS = 'GET_DATA_SUCESS';\nexport const GET_DATA_FAIL = 'GET_DATA_FAIL';","import {\n    LOADING_GET_DATA,\n    GET_DATA_SUCESS,\n    GET_DATA_FAIL\n} from '../actions/constant';\n\nexport const initialState = {\n    loading: false,\n    dataResume: [],\n    error: null\n}\n\nconst resumeReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case LOADING_GET_DATA:\n            return {\n                ...state,\n                ...{\n                    loading: action.loading\n                }\n            }\n        case GET_DATA_SUCESS:\n            return {\n                ...state,\n                ...{\n                    loading: false,\n                    dataResume: action.data,\n                    error: null\n                }\n            }\n        case GET_DATA_FAIL:\n            return {\n                ...state,\n                ...{\n                    loading: false,\n                    error: action.error,\n                    dataResume: []\n                }\n            }\n        default:\n            return state;\n    }\n}\n\nexport default resumeReducer;","import { combineReducers } from 'redux';\nimport resume from './resumeReducer';\n\nconst rootReducer = combineReducers({\n    resume\n});\n\nexport default rootReducer;","const data = {\n    introduction: {\n      full_name: 'Sheila Ng',\n      avatar: \"img-profile.jpg\",\n      title: \"Fullstack web-app developer\",\n      description: \"Programming is life. No code No life \",\n    },\n    skills: [\n      {\n        skill_name: \"HTML/HTML5\",\n        skill_level: 95\n      },\n      {\n        skill_name: \"CSS/CSS3/SCSS/SASS\",\n        skill_level: 80\n      },\n      {\n        skill_name: \"Javascript / Jquery\",\n        skill_level: 95\n      },\n      {\n        skill_name: \"ReactJS\",\n        skill_level: 90\n      },\n      {\n        skill_name: \"Vuejs\",\n        skill_level: 70\n      },\n      {\n        skill_name: \"React Native\",\n        skill_level: 90\n      },\n      {\n        skill_name: \"NodeJS\",\n        skill_level: 80\n      },\n      {\n        skill_name: \"PHP\",\n        skill_level: 95\n      },\n      {\n        skill_name: \"Golang / C / C++\",\n        skill_level: 60\n      },\n      {\n        skill_name: \"MySQL\",\n        skill_level: 80\n      },\n      {\n        skill_name: \"Cache\",\n        skill_level: 70\n      },\n      {\n        skill_name: \"Redis\",\n        skill_level: 70\n      },\n      {\n        skill_name: \"ResAPI / Soap / GraphQL\",\n        skill_level: 80\n      }\n    ],\n    experience: [\n      {\n        time: \"2016 - Present\",\n        level: \"Senior developer\",\n        company: \"Vccorp joint stock company\",\n        address: \"19F, Hapulico center tower, number 1 Nguyen Huy Tuong, Thanh Xuan , Ha Noi\"\n      },\n      {\n        time: \"2014 - 2016\",\n        level: \"Junior developer\",\n        company: \"Viet Nhat General Joint Stock Company (VINICORP)\",\n        address: \"14F, ICON4 TOWER, 243A La Thanh St., Lang Thuong, Dong Da, Ha Noi, VIETNAM\"\n      }\n    ],\n    education:[\n      {\n        time: \"2008 - 2012\",\n        name: \"computer science\",\n        school: \"Ha Noi university of industry\",\n        rank: \"good\",\n        add: \"km32 Bac Tu Liem - Ha Noi\"\n      }\n    ],\n    interest: [\n      {\n        name: \"Play sport\",\n        description: \"Football, Chess ...\"\n      },\n      {\n        name: \"Read book\",\n        description: \"Books of technology\"\n      }\n    ],\n    contact: {\n      phone: \"0705414958\",\n      address: \"261 nguyen dinh chieu, p5, q3, tpHCM\",\n      email: \"minhngoc2126@gmail.com\"\n    }\n  }\n  \n  export default data;","import DataResume from './cvData';\n\nfunction* getDataResume() {\n    const response = yield DataResume;\n    return response;\n}\n\nexport const api = {\n    getDataResume\n}","//Saga effects\nimport { put, takeEvery, call } from 'redux-saga/effects';\nimport {GET_DATA} from '../actions/constant';\nimport {\n    loadingGetData,\n    getDataResumeSuccess,\n    getDataResumeFail\n} from '../actions/action';\n\nimport { api } from '../api/api';\n\nfunction* getDataSaga() {\n    try {\n        yield put(loadingGetData(true));\n        const dataResume = yield call(api.getDataResume);\n        if(dataResume){\n            yield put(getDataResumeSuccess(dataResume));\n        } else {\n            yield put(getDataResumeFail('error'));\n        }\n    } catch (err) {\n        console.error(err);\n    }\n}\n\nexport function* watchGetDataSaga() {\n    yield takeEvery(GET_DATA, getDataSaga);\n}","import { all, call } from 'redux-saga/effects';\nimport {watchGetDataSaga} from './resumeSaga';\n\nexport default function* rootSaga() {\n    yield all([\n        call(watchGetDataSaga)\n    ])\n}","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from '../reducer/rootReducer';\nimport rootSaga from '../saga/rootSaga';\n\n// create the saga middleware\nconst sagaMiddleware = createSagaMiddleware();\n\nconst configureStore = (perloadState = {}) => {\n    const store = createStore(\n        rootReducer,\n        perloadState,\n        composeWithDevTools(\n            applyMiddleware(\n               sagaMiddleware \n            )\n        )\n    );\n    sagaMiddleware.run(rootSaga);\n    return { store }\n}\n\nexport default configureStore;","import React from 'react';\nimport AppResume from './container/Resume';\nimport { Provider } from 'react-redux';\nimport configureStore from './store/configStore';\n\n\nconst { store } = configureStore();\n\nfunction App() {\n  return (\n    <>\n    <Provider store={store}>\n      <AppResume/>\n    </Provider>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}