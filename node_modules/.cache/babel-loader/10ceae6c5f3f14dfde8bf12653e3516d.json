{"ast":null,"code":"import{createStore,applyMiddleware}from'redux';import{composeWithDevTools}from'redux-devtools-extension';import createSagaMiddleware from'redux-saga';import rootReducer from'../reducer/rootReducer';import rootSaga from'../saga/rootSaga';// create the saga middleware\nvar sagaMiddleware=createSagaMiddleware();var configureStore=function configureStore(){var perloadState=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var store=createStore(rootReducer,perloadState,composeWithDevTools(applyMiddleware(sagaMiddleware)));sagaMiddleware.run(rootSaga);return{store:store};};export default configureStore;","map":{"version":3,"sources":["/Users/minhtran/Desktop/reactjs/resume/cvonline/src/store/configStore.js"],"names":["createStore","applyMiddleware","composeWithDevTools","createSagaMiddleware","rootReducer","rootSaga","sagaMiddleware","configureStore","perloadState","store","run"],"mappings":"AAAA,OAASA,WAAT,CAAsBC,eAAtB,KAA6C,OAA7C,CACA,OAASC,mBAAT,KAAoC,0BAApC,CACA,MAAOC,CAAAA,oBAAP,KAAiC,YAAjC,CACA,MAAOC,CAAAA,WAAP,KAAwB,wBAAxB,CACA,MAAOC,CAAAA,QAAP,KAAqB,kBAArB,CAEA;AACA,GAAMC,CAAAA,cAAc,CAAGH,oBAAoB,EAA3C,CAEA,GAAMI,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAuB,IAAtBC,CAAAA,YAAsB,2DAAP,EAAO,CAC1C,GAAMC,CAAAA,KAAK,CAAGT,WAAW,CACrBI,WADqB,CAErBI,YAFqB,CAGrBN,mBAAmB,CACfD,eAAe,CACZK,cADY,CADA,CAHE,CAAzB,CASAA,cAAc,CAACI,GAAf,CAAmBL,QAAnB,EACA,MAAO,CAAEI,KAAK,CAALA,KAAF,CAAP,CACH,CAZD,CAcA,cAAeF,CAAAA,cAAf","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from '../reducer/rootReducer';\nimport rootSaga from '../saga/rootSaga';\n\n// create the saga middleware\nconst sagaMiddleware = createSagaMiddleware();\n\nconst configureStore = (perloadState = {}) => {\n    const store = createStore(\n        rootReducer,\n        perloadState,\n        composeWithDevTools(\n            applyMiddleware(\n               sagaMiddleware \n            )\n        )\n    );\n    sagaMiddleware.run(rootSaga);\n    return { store }\n}\n\nexport default configureStore;"]},"metadata":{},"sourceType":"module"}