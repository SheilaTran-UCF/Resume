{"ast":null,"code":"//Saga effects\nimport { put, takeEvery, call } from 'redux-saga/effects';\nimport { GET_DATA } from '../actions/constant';\nimport { loadingGetData, getDataResumeSuccess, getDataResumeFail } from '../actions/action';\nimport { api } from '../api/api';\n\nfunction* getDataSaga() {\n  try {\n    yield put(loadingGetData(true));\n    const dataResume = yield call(api.getDataResume);\n\n    if (dataResume) {\n      yield put(getDataResumeSuccess(dataResume));\n    } else {\n      yield put(getDataResumeFail('error'));\n    }\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nexport function* watchGetDataSaga() {\n  yield takeEvery(GET_DATA, getDataSaga);\n}","map":{"version":3,"sources":["/Users/minhtran/Desktop/reactjs/resume/cvonline/src/saga/resumeSaga.js"],"names":["put","takeEvery","call","GET_DATA","loadingGetData","getDataResumeSuccess","getDataResumeFail","api","getDataSaga","dataResume","getDataResume","err","console","error","watchGetDataSaga"],"mappings":"AAAA;AACA,SAASA,GAAT,EAAcC,SAAd,EAAyBC,IAAzB,QAAqC,oBAArC;AACA,SAAQC,QAAR,QAAuB,qBAAvB;AACA,SACIC,cADJ,EAEIC,oBAFJ,EAGIC,iBAHJ,QAIO,mBAJP;AAMA,SAASC,GAAT,QAAoB,YAApB;;AAEA,UAAUC,WAAV,GAAwB;AACpB,MAAI;AACA,UAAMR,GAAG,CAACI,cAAc,CAAC,IAAD,CAAf,CAAT;AACA,UAAMK,UAAU,GAAG,MAAMP,IAAI,CAACK,GAAG,CAACG,aAAL,CAA7B;;AACA,QAAGD,UAAH,EAAc;AACV,YAAMT,GAAG,CAACK,oBAAoB,CAACI,UAAD,CAArB,CAAT;AACH,KAFD,MAEO;AACH,YAAMT,GAAG,CAACM,iBAAiB,CAAC,OAAD,CAAlB,CAAT;AACH;AACJ,GARD,CAQE,OAAOK,GAAP,EAAY;AACVC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACH;AACJ;;AAED,OAAO,UAAUG,gBAAV,GAA6B;AAChC,QAAMb,SAAS,CAACE,QAAD,EAAWK,WAAX,CAAf;AACH","sourcesContent":["//Saga effects\nimport { put, takeEvery, call } from 'redux-saga/effects';\nimport {GET_DATA} from '../actions/constant';\nimport {\n    loadingGetData,\n    getDataResumeSuccess,\n    getDataResumeFail\n} from '../actions/action';\n\nimport { api } from '../api/api';\n\nfunction* getDataSaga() {\n    try {\n        yield put(loadingGetData(true));\n        const dataResume = yield call(api.getDataResume);\n        if(dataResume){\n            yield put(getDataResumeSuccess(dataResume));\n        } else {\n            yield put(getDataResumeFail('error'));\n        }\n    } catch (err) {\n        console.error(err);\n    }\n}\n\nexport function* watchGetDataSaga() {\n    yield takeEvery(GET_DATA, getDataSaga);\n}"]},"metadata":{},"sourceType":"module"}